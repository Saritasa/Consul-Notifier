### YamlMime:ManagedReference
items:
- uid: ConsulNotifier.Providers.ConsulServiceDescriptor
  commentId: T:ConsulNotifier.Providers.ConsulServiceDescriptor
  id: ConsulServiceDescriptor
  parent: ConsulNotifier.Providers
  children:
  - ConsulNotifier.Providers.ConsulServiceDescriptor.Host
  - ConsulNotifier.Providers.ConsulServiceDescriptor.ServiceName
  langs:
  - csharp
  - vb
  name: ConsulServiceDescriptor
  nameWithType: ConsulServiceDescriptor
  fullName: ConsulNotifier.Providers.ConsulServiceDescriptor
  type: Class
  source:
    remote:
      commit:
        author:
          date: 2016-12-08T13:09:00.8054692Z
    id: ConsulServiceDescriptor
    path: C:/Users/Arthur/Documents/Visual Studio 2017/Projects/ConsulNotifier/src/ConsulNotifier/Providers/ConsulServiceDescriptor.cs
    startLine: 5
  assemblies:
  - ConsulNotifier
  namespace: ConsulNotifier.Providers
  summary: "\nDescriptor with information about service in consul.\n"
  example: []
  syntax:
    content: public class ConsulServiceDescriptor
    content.vb: Public Class ConsulServiceDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ConsulNotifier.Providers.ConsulServiceDescriptor.ServiceName
  commentId: P:ConsulNotifier.Providers.ConsulServiceDescriptor.ServiceName
  id: ServiceName
  parent: ConsulNotifier.Providers.ConsulServiceDescriptor
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ConsulServiceDescriptor.ServiceName
  fullName: ConsulNotifier.Providers.ConsulServiceDescriptor.ServiceName
  type: Property
  source:
    remote:
      commit:
        author:
          date: 2016-12-08T13:09:00.8054692Z
    id: ServiceName
    path: C:/Users/Arthur/Documents/Visual Studio 2017/Projects/ConsulNotifier/src/ConsulNotifier/Providers/ConsulServiceDescriptor.cs
    startLine: 13
  assemblies:
  - ConsulNotifier
  namespace: ConsulNotifier.Providers
  summary: "\nName of service\n"
  remarks: "\nFor example *saritasa-hosting-80*\n"
  example: []
  syntax:
    content: public string ServiceName { get; set; }
    content.vb: Public Property ServiceName As String
    parameters: []
    return:
      type: System.String
  overload: ConsulNotifier.Providers.ConsulServiceDescriptor.ServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ConsulNotifier.Providers.ConsulServiceDescriptor.Host
  commentId: P:ConsulNotifier.Providers.ConsulServiceDescriptor.Host
  id: Host
  parent: ConsulNotifier.Providers.ConsulServiceDescriptor
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: ConsulServiceDescriptor.Host
  fullName: ConsulNotifier.Providers.ConsulServiceDescriptor.Host
  type: Property
  source:
    remote:
      commit:
        author:
          date: 2016-12-08T13:09:00.8054692Z
    id: Host
    path: C:/Users/Arthur/Documents/Visual Studio 2017/Projects/ConsulNotifier/src/ConsulNotifier/Providers/ConsulServiceDescriptor.cs
    startLine: 21
  assemblies:
  - ConsulNotifier
  namespace: ConsulNotifier.Providers
  summary: "\nHost name of consul service.\n"
  remarks: "\nFor example *saritasa-hosting.com*\n"
  example: []
  syntax:
    content: public string Host { get; set; }
    content.vb: Public Property Host As String
    parameters: []
    return:
      type: System.String
  overload: ConsulNotifier.Providers.ConsulServiceDescriptor.Host*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: ConsulNotifier.Providers
  commentId: N:ConsulNotifier.Providers
  isExternal: false
  name: ConsulNotifier.Providers
  nameWithType: ConsulNotifier.Providers
  fullName: ConsulNotifier.Providers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: ConsulNotifier.Providers.ConsulServiceDescriptor.ServiceName*
  commentId: Overload:ConsulNotifier.Providers.ConsulServiceDescriptor.ServiceName
  isExternal: false
  name: ServiceName
  nameWithType: ConsulServiceDescriptor.ServiceName
  fullName: ConsulNotifier.Providers.ConsulServiceDescriptor.ServiceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ConsulNotifier.Providers.ConsulServiceDescriptor.Host*
  commentId: Overload:ConsulNotifier.Providers.ConsulServiceDescriptor.Host
  isExternal: false
  name: Host
  nameWithType: ConsulServiceDescriptor.Host
  fullName: ConsulNotifier.Providers.ConsulServiceDescriptor.Host
